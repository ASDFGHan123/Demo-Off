{"ast":null,"code":"import React,{useState,useEffect}from'react';import{Form,Button,Card,Alert,Spinner,Row,Col}from'react-bootstrap';import{useNavigate}from'react-router-dom';import{userAPI,chatAPI}from'../../services/api';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const CreateGroupChat=()=>{const[users,setUsers]=useState([]);const[selectedUsers,setSelectedUsers]=useState([]);const[title,setTitle]=useState('');const[description,setDescription]=useState('');const[loading,setLoading]=useState(true);const[creating,setCreating]=useState(false);const[error,setError]=useState('');const navigate=useNavigate();useEffect(()=>{loadUsers();},[]);const loadUsers=async()=>{try{setLoading(true);const response=await userAPI.getUsers();setUsers(response.data);}catch(err){setError('Failed to load users');console.error('Error loading users:',err);}finally{setLoading(false);}};const handleUserToggle=userId=>{setSelectedUsers(prev=>prev.includes(userId)?prev.filter(id=>id!==userId):[...prev,userId]);};const handleSubmit=async e=>{e.preventDefault();if(!title.trim()||selectedUsers.length===0)return;setCreating(true);setError('');try{const response=await chatAPI.createGroupChat({title:title.trim(),member_ids:selectedUsers,description:description.trim()||undefined});navigate(\"/chat/\".concat(response.data.conversation_id));}catch(err){setError('Failed to create group chat');console.error('Error creating group chat:',err);}finally{setCreating(false);}};if(loading){return/*#__PURE__*/_jsxs(\"div\",{className:\"text-center\",children:[/*#__PURE__*/_jsx(Spinner,{animation:\"border\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Loading users...\"})]});}return/*#__PURE__*/_jsx(\"div\",{className:\"row justify-content-center\",children:/*#__PURE__*/_jsx(\"div\",{className:\"col-md-8 col-lg-6\",children:/*#__PURE__*/_jsxs(Card,{children:[/*#__PURE__*/_jsx(Card.Header,{children:/*#__PURE__*/_jsx(\"h3\",{className:\"text-center mb-0\",children:\"Create Group Chat\"})}),/*#__PURE__*/_jsxs(Card.Body,{children:[error&&/*#__PURE__*/_jsx(Alert,{variant:\"danger\",children:error}),/*#__PURE__*/_jsxs(Form,{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsxs(Form.Group,{className:\"mb-3\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Group Title *\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"text\",placeholder:\"Enter group name...\",value:title,onChange:e=>setTitle(e.target.value),required:true,maxLength:100})]}),/*#__PURE__*/_jsxs(Form.Group,{className:\"mb-3\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Description (Optional)\"}),/*#__PURE__*/_jsx(Form.Control,{as:\"textarea\",rows:3,placeholder:\"Enter group description...\",value:description,onChange:e=>setDescription(e.target.value)})]}),/*#__PURE__*/_jsxs(Form.Group,{className:\"mb-3\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Select Members *\"}),/*#__PURE__*/_jsx(\"div\",{className:\"border rounded p-3\",style:{maxHeight:'300px',overflowY:'auto'},children:/*#__PURE__*/_jsx(Row,{children:users.map(user=>/*#__PURE__*/_jsx(Col,{xs:12,sm:6,className:\"mb-2\",children:/*#__PURE__*/_jsx(Form.Check,{type:\"checkbox\",id:\"user-\".concat(user.user_id),label:/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:user.display_name}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsxs(\"small\",{className:\"text-muted\",children:[\"@\",user.username]}),/*#__PURE__*/_jsx(\"span\",{className:\"ms-2 \".concat(user.is_online?'text-success':'text-secondary'),children:user.is_online?'● Online':'● Offline'})]}),checked:selectedUsers.includes(user.user_id),onChange:()=>handleUserToggle(user.user_id)})},user.user_id))})}),/*#__PURE__*/_jsxs(Form.Text,{className:\"text-muted\",children:[\"Selected: \",selectedUsers.length,\" members\"]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"d-grid\",children:/*#__PURE__*/_jsx(Button,{type:\"submit\",variant:\"success\",disabled:creating||!title.trim()||selectedUsers.length===0,children:creating?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Spinner,{animation:\"border\",size:\"sm\",className:\"me-2\"}),\"Creating Group...\"]}):'Create Group Chat'})})]})]})]})})});};export default CreateGroupChat;","map":{"version":3,"names":["React","useState","useEffect","Form","Button","Card","Alert","Spinner","Row","Col","useNavigate","userAPI","chatAPI","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","CreateGroupChat","users","setUsers","selectedUsers","setSelectedUsers","title","setTitle","description","setDescription","loading","setLoading","creating","setCreating","error","setError","navigate","loadUsers","response","getUsers","data","err","console","handleUserToggle","userId","prev","includes","filter","id","handleSubmit","e","preventDefault","trim","length","createGroupChat","member_ids","undefined","concat","conversation_id","className","children","animation","Header","Body","variant","onSubmit","Group","Label","Control","type","placeholder","value","onChange","target","required","maxLength","as","rows","style","maxHeight","overflowY","map","user","xs","sm","Check","user_id","label","display_name","username","is_online","checked","Text","disabled","size"],"sources":["c:/Users/salaam/Desktop/OffChat/frontend/src/components/chat/CreateGroupChat.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Form, Button, Card, Alert, Spinner, Row, Col } from 'react-bootstrap';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { userAPI, chatAPI } from '../../services/api';\r\n\r\ninterface User {\r\n  user_id: number;\r\n  username: string;\r\n  display_name: string;\r\n  is_online: boolean;\r\n}\r\n\r\nconst CreateGroupChat: React.FC = () => {\r\n  const [users, setUsers] = useState<User[]>([]);\r\n  const [selectedUsers, setSelectedUsers] = useState<number[]>([]);\r\n  const [title, setTitle] = useState('');\r\n  const [description, setDescription] = useState('');\r\n  const [loading, setLoading] = useState(true);\r\n  const [creating, setCreating] = useState(false);\r\n  const [error, setError] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    loadUsers();\r\n  }, []);\r\n\r\n  const loadUsers = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await userAPI.getUsers();\r\n      setUsers(response.data);\r\n    } catch (err) {\r\n      setError('Failed to load users');\r\n      console.error('Error loading users:', err);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleUserToggle = (userId: number) => {\r\n    setSelectedUsers(prev =>\r\n      prev.includes(userId)\r\n        ? prev.filter(id => id !== userId)\r\n        : [...prev, userId]\r\n    );\r\n  };\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    if (!title.trim() || selectedUsers.length === 0) return;\r\n\r\n    setCreating(true);\r\n    setError('');\r\n\r\n    try {\r\n      const response = await chatAPI.createGroupChat({\r\n        title: title.trim(),\r\n        member_ids: selectedUsers,\r\n        description: description.trim() || undefined\r\n      });\r\n      navigate(`/chat/${response.data.conversation_id}`);\r\n    } catch (err) {\r\n      setError('Failed to create group chat');\r\n      console.error('Error creating group chat:', err);\r\n    } finally {\r\n      setCreating(false);\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"text-center\">\r\n        <Spinner animation=\"border\" />\r\n        <p>Loading users...</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"row justify-content-center\">\r\n      <div className=\"col-md-8 col-lg-6\">\r\n        <Card>\r\n          <Card.Header>\r\n            <h3 className=\"text-center mb-0\">Create Group Chat</h3>\r\n          </Card.Header>\r\n          <Card.Body>\r\n            {error && <Alert variant=\"danger\">{error}</Alert>}\r\n\r\n            <Form onSubmit={handleSubmit}>\r\n              <Form.Group className=\"mb-3\">\r\n                <Form.Label>Group Title *</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  placeholder=\"Enter group name...\"\r\n                  value={title}\r\n                  onChange={(e) => setTitle(e.target.value)}\r\n                  required\r\n                  maxLength={100}\r\n                />\r\n              </Form.Group>\r\n\r\n              <Form.Group className=\"mb-3\">\r\n                <Form.Label>Description (Optional)</Form.Label>\r\n                <Form.Control\r\n                  as=\"textarea\"\r\n                  rows={3}\r\n                  placeholder=\"Enter group description...\"\r\n                  value={description}\r\n                  onChange={(e) => setDescription(e.target.value)}\r\n                />\r\n              </Form.Group>\r\n\r\n              <Form.Group className=\"mb-3\">\r\n                <Form.Label>Select Members *</Form.Label>\r\n                <div className=\"border rounded p-3\" style={{ maxHeight: '300px', overflowY: 'auto' }}>\r\n                  <Row>\r\n                    {users.map(user => (\r\n                      <Col key={user.user_id} xs={12} sm={6} className=\"mb-2\">\r\n                        <Form.Check\r\n                          type=\"checkbox\"\r\n                          id={`user-${user.user_id}`}\r\n                          label={\r\n                            <div>\r\n                              <strong>{user.display_name}</strong>\r\n                              <br />\r\n                              <small className=\"text-muted\">@{user.username}</small>\r\n                              <span className={`ms-2 ${user.is_online ? 'text-success' : 'text-secondary'}`}>\r\n                                {user.is_online ? '● Online' : '● Offline'}\r\n                              </span>\r\n                            </div>\r\n                          }\r\n                          checked={selectedUsers.includes(user.user_id)}\r\n                          onChange={() => handleUserToggle(user.user_id)}\r\n                        />\r\n                      </Col>\r\n                    ))}\r\n                  </Row>\r\n                </div>\r\n                <Form.Text className=\"text-muted\">\r\n                  Selected: {selectedUsers.length} members\r\n                </Form.Text>\r\n              </Form.Group>\r\n\r\n              <div className=\"d-grid\">\r\n                <Button\r\n                  type=\"submit\"\r\n                  variant=\"success\"\r\n                  disabled={creating || !title.trim() || selectedUsers.length === 0}\r\n                >\r\n                  {creating ? (\r\n                    <>\r\n                      <Spinner animation=\"border\" size=\"sm\" className=\"me-2\" />\r\n                      Creating Group...\r\n                    </>\r\n                  ) : (\r\n                    'Create Group Chat'\r\n                  )}\r\n                </Button>\r\n              </div>\r\n            </Form>\r\n          </Card.Body>\r\n        </Card>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreateGroupChat;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}